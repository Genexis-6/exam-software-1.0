"""added subject name to the student starts table

Revision ID: 101766323640
Revises: 
Create Date: 2025-05-26 12:06:46.572273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '101766323640'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('firstname', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('picture', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_students_email'), 'students', ['email'], unique=False)
    op.create_index(op.f('ix_students_firstname'), 'students', ['firstname'], unique=False)
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    op.create_index(op.f('ix_students_lastname'), 'students', ['lastname'], unique=False)
    op.create_index(op.f('ix_students_picture'), 'students', ['picture'], unique=False)
    op.create_index(op.f('ix_students_role'), 'students', ['role'], unique=False)
    op.create_table('subjects',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=700), nullable=True),
    sa.Column('tutor', sa.String(length=255), nullable=False),
    sa.Column('time_added', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_description'), 'subjects', ['description'], unique=False)
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_index(op.f('ix_subjects_name'), 'subjects', ['name'], unique=True)
    op.create_index(op.f('ix_subjects_tutor'), 'subjects', ['tutor'], unique=False)
    op.create_table('filterquestions',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('score_per_qa', sa.Integer(), nullable=False),
    sa.Column('set_question_ans', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.String(length=100), nullable=False),
    sa.Column('time_added', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filterquestions_id'), 'filterquestions', ['id'], unique=False)
    op.create_index(op.f('ix_filterquestions_score_per_qa'), 'filterquestions', ['score_per_qa'], unique=False)
    op.create_index(op.f('ix_filterquestions_set_question_ans'), 'filterquestions', ['set_question_ans'], unique=False)
    op.create_index(op.f('ix_filterquestions_subject_id'), 'filterquestions', ['subject_id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('author', sa.String(length=200), nullable=False),
    sa.Column('quest', sa.String(length=500), nullable=False),
    sa.Column('a_', sa.String(length=100), nullable=False),
    sa.Column('b_', sa.String(length=100), nullable=False),
    sa.Column('c_', sa.String(length=100), nullable=False),
    sa.Column('d_', sa.String(length=100), nullable=False),
    sa.Column('ans_', sa.String(length=100), nullable=False),
    sa.Column('quest_id', sa.String(length=100), nullable=False),
    sa.Column('subject_id', sa.String(length=100), nullable=False),
    sa.Column('time_added', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_a_'), 'questions', ['a_'], unique=False)
    op.create_index(op.f('ix_questions_ans_'), 'questions', ['ans_'], unique=False)
    op.create_index(op.f('ix_questions_author'), 'questions', ['author'], unique=False)
    op.create_index(op.f('ix_questions_b_'), 'questions', ['b_'], unique=False)
    op.create_index(op.f('ix_questions_c_'), 'questions', ['c_'], unique=False)
    op.create_index(op.f('ix_questions_d_'), 'questions', ['d_'], unique=False)
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_index(op.f('ix_questions_quest'), 'questions', ['quest'], unique=False)
    op.create_index(op.f('ix_questions_quest_id'), 'questions', ['quest_id'], unique=False)
    op.create_index(op.f('ix_questions_title'), 'questions', ['title'], unique=False)
    op.create_table('studentstarts',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('subject_name', sa.String(length=200), nullable=False),
    sa.Column('exam_title', sa.String(length=200), nullable=False),
    sa.Column('time_left', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('exam_status', sa.String(length=100), nullable=False),
    sa.Column('qa_ans_length', sa.Integer(), nullable=False),
    sa.Column('qa_to_ans_length', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=False),
    sa.Column('student_id', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_studentstarts_exam_status'), 'studentstarts', ['exam_status'], unique=False)
    op.create_index(op.f('ix_studentstarts_exam_title'), 'studentstarts', ['exam_title'], unique=True)
    op.create_index(op.f('ix_studentstarts_id'), 'studentstarts', ['id'], unique=False)
    op.create_index(op.f('ix_studentstarts_qa_ans_length'), 'studentstarts', ['qa_ans_length'], unique=False)
    op.create_index(op.f('ix_studentstarts_qa_to_ans_length'), 'studentstarts', ['qa_to_ans_length'], unique=False)
    op.create_index(op.f('ix_studentstarts_score'), 'studentstarts', ['score'], unique=False)
    op.create_index(op.f('ix_studentstarts_subject_name'), 'studentstarts', ['subject_name'], unique=False)
    op.create_index(op.f('ix_studentstarts_time_left'), 'studentstarts', ['time_left'], unique=False)
    op.create_table('timesetup',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('hr_', sa.String(length=100), nullable=False),
    sa.Column('min_', sa.String(length=100), nullable=False),
    sa.Column('sec_', sa.String(length=100), nullable=False),
    sa.Column('subject_id', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timesetup_hr_'), 'timesetup', ['hr_'], unique=False)
    op.create_index(op.f('ix_timesetup_id'), 'timesetup', ['id'], unique=False)
    op.create_index(op.f('ix_timesetup_min_'), 'timesetup', ['min_'], unique=False)
    op.create_index(op.f('ix_timesetup_sec_'), 'timesetup', ['sec_'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_timesetup_sec_'), table_name='timesetup')
    op.drop_index(op.f('ix_timesetup_min_'), table_name='timesetup')
    op.drop_index(op.f('ix_timesetup_id'), table_name='timesetup')
    op.drop_index(op.f('ix_timesetup_hr_'), table_name='timesetup')
    op.drop_table('timesetup')
    op.drop_index(op.f('ix_studentstarts_time_left'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_subject_name'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_score'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_qa_to_ans_length'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_qa_ans_length'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_id'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_exam_title'), table_name='studentstarts')
    op.drop_index(op.f('ix_studentstarts_exam_status'), table_name='studentstarts')
    op.drop_table('studentstarts')
    op.drop_index(op.f('ix_questions_title'), table_name='questions')
    op.drop_index(op.f('ix_questions_quest_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_quest'), table_name='questions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_d_'), table_name='questions')
    op.drop_index(op.f('ix_questions_c_'), table_name='questions')
    op.drop_index(op.f('ix_questions_b_'), table_name='questions')
    op.drop_index(op.f('ix_questions_author'), table_name='questions')
    op.drop_index(op.f('ix_questions_ans_'), table_name='questions')
    op.drop_index(op.f('ix_questions_a_'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_filterquestions_subject_id'), table_name='filterquestions')
    op.drop_index(op.f('ix_filterquestions_set_question_ans'), table_name='filterquestions')
    op.drop_index(op.f('ix_filterquestions_score_per_qa'), table_name='filterquestions')
    op.drop_index(op.f('ix_filterquestions_id'), table_name='filterquestions')
    op.drop_table('filterquestions')
    op.drop_index(op.f('ix_subjects_tutor'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_name'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_description'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_students_role'), table_name='students')
    op.drop_index(op.f('ix_students_picture'), table_name='students')
    op.drop_index(op.f('ix_students_lastname'), table_name='students')
    op.drop_index(op.f('ix_students_id'), table_name='students')
    op.drop_index(op.f('ix_students_firstname'), table_name='students')
    op.drop_index(op.f('ix_students_email'), table_name='students')
    op.drop_table('students')
    # ### end Alembic commands ###
